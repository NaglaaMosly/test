pipeline {

	agent any
	
	environment {
		currentTime = new Date().format("yyyy-MM-dd'T'HH-mm", TimeZone.getTimeZone("Africa/Cairo"))
		pattern = "-build${BUILD_ID}-${currentTime}"
		packageJSON = readJSON file: 'package.json'
        PROJECT_VERSION = "${packageJSON.version}"
	}
		
	stages {
		  
		stage('Initialization') {
		
			steps {
				sh 'printenv';
				
			script {
					load("./${GIT_LOCAL_BRANCH}-properties")
				  }
				sh "echo imageTag: ${imageTag}"
				sh "echo imageName: ${imageName}"
				sh "echo containerName: ${containerName}"
				sh "echo app_profile: ${app_profile}"
					
				sh ("sed -i.bak 's#app_profile#${app_profile}#g'  resources/Dockerfile-win")
		    }
		}
		
	    stage("Setting Version") {
				
       		steps {
                script {
            		// Define Variable
             		def USER_INPUT = input(
                    	message: "The Current version of app is : ${env.PROJECT_VERSION} \n Please enter the Version U want to deploy with :",
                    	parameters: [
                            string(defaultValue: "${env.PROJECT_VERSION}",
                             	   name: 'input',
                                   description: 'Project Version'),
                    ])
					
            		echo "The answer is: ${USER_INPUT}"
					
					sh "sed -i '3s#${PROJECT_VERSION}#${USER_INPUT}#'  package.json"
					
					if ( env.PROJECT_VERSION == "${USER_INPUT}" ) {
					
						echo "No push happened as the version is the same"	
						
                    } else  {
					
					withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'naglaa-cred',
                            		  usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
									  
						sh 'git config --global user.email "naglaa.reda@fawry.com" '
						sh 'git config --global user.name "Naglaa Reda" '
						sh 'git checkout alpha'
						sh "git add package.json"
						sh 'git commit -m  "New project version" '
						sh "git push http://${env.USERNAME}:${env.PASSWORD}@10.96.0.227:8080/tfs/DefaultCollection/consumer/_git/be-login-ui"
						}
                    }
					//changing build name
					currentBuild.displayName = "V${USER_INPUT}"
                    currentBuild.description = "#${BUILD_NUMBER} (V${USER_INPUT}${pattern})"
               	 }
            }
        }


		stage('Build') {
		
        	steps {
				sh "docker stop ${containerName} || true && docker rm ${containerName} || true && docker rmi ${imageName}:${env.PROJECT_VERSION} || true "
				sh "rm -rf ./be-login  ./be-login*.gz "	
				sh "docker build -f resources/Dockerfile-win  -t ${imageName}:${env.PROJECT_VERSION} ."
                sh "docker run -d --name ${containerName}  ${imageName}:${env.PROJECT_VERSION}"
            }
            post {
                success {
					sh "docker cp ${containerName}:/opt/app/dist  ./be-login"
					sh "docker stop ${containerName}  || true"
				}
            }
        }	    	

		stage('Archive Artifacts') {
		
			environment {
	 			packageJSON = readJSON file: 'package.json'
        		NEW_VERSION = "${packageJSON.version}"
			}
            steps {
				sh "cp resources/.htaccess   be-login"
            	sh 'tar -cvzf  "be-login-${NEW_VERSION}${pattern}.tar.gz"  --strip-components=1  be-login/*'
                archiveArtifacts artifacts: "be-login-${NEW_VERSION}${pattern}.tar.gz"
           }
		}
			
		stage('Deploy on windows server') {
		  	steps{
				script {
                	timeout(time: 60, unit: 'MINUTES') {
                    input(id: "Deploy Gate", message: "Deploying to testing machine", ok: 'Deploy') }
           		}
					   
				sshPublisher(publishers: [sshPublisherDesc(configName: 'windows-deploy', \
				transfers: [sshTransfer( sourceFiles: 'be-login/**')])])
					 
				sshPublisher(publishers: [sshPublisherDesc(configName: 'windows-deploy', \
				transfers: [sshTransfer( remoteDirectory: 'archive-ui/be-login/', \
						                 sourceFiles: 'be-login-*.gz/**')])])
				
				sh 'ssh Administrator@10.95.0.178  powershell.exe  ls C:/Apache24/htdocs/archive-ui/be-login'
				
				sh 'echo "you can access tha app from http://10.95.0.178/be-login/ " '
			}
		}
	}
}

